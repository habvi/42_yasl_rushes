#!./yasl

{
} none

{
    "\n" print
} endl

{
	=
	][
	[]
	[#]
} strlen

{
	"Error: is not valid number\n" print
	1 exit
} not_number

{
	= ":" == ? not_number : none
} check_colon

{
	7:=:0
	= 9 <= ? check_colon : none
	=
	"0" >= ? = : not_number
	":" <= ? = : not_number
	!
	7:!
	= 1 << =:7
} is_number

{
	is_number
	8:=:0
	1 - =
	0 == ? 0:9 : 1:9
	0:=:8
} loop_cnt

{
	1:1
	0:=:6
} init_factorial_value

{
	"Error:invalid arguments number\n" print
	1 exit
} invalid_arg

{
	# 3 != ? invalid_arg : none
	! !
} remove_unnecessry_arg

{
	"1\n" print
	0 exit
} zero

{
	strlen
	=:8
	! !
	=:7
	@loop_cnt
} is_positive_number

{
	"Error:overflow\n" print
	1 exit
} overflow

{
	! #	0 >
	? 1 : 0
} clear_stack

{
	=
	1:=:0
	%*
	=:1
	< ? ! : overflow
	1 - = 1
	> ? factorial : 1:print
} factorial

remove_unnecessry_arg
init_factorial_value
is_positive_number
= 0
== ? zero : 1
== ? zero : 1
@clear_stack
6:=:0
factorial
endl
